// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package gympack

import (
	"github.com/google/wire"
	"gympack/pkg/domain/usecase/pack/create"
	delete2 "gympack/pkg/domain/usecase/pack/delete"
	"gympack/pkg/domain/usecase/pack/get"
	"gympack/pkg/domain/usecase/pack/update"
	"gympack/pkg/infrastructure/database/mongodb"
	"gympack/pkg/infrastructure/database/mongodb/repository/pack"
	"gympack/pkg/presentation"
	"gympack/pkg/presentation/middleware"
	"gympack/pkg/presentation/route"
	"gympack/pkg/shared"
)

// Injectors from wire.go:

func InitializeLoader() *presentation.Loader {
	configInterface := shared.NewConfig()
	dtoValidationMiddleware := middlewares.NewDtoValidationMiddleware()
	loggerInterface := shared.NewLogger(configInterface)
	mongoDbProviderInterface := provider.NewMongoDbProvider(configInterface)
	packRepositoryInterface := pack.NewPackRepository(mongoDbProviderInterface)
	createPackUseCaseInterface := create.NewCreatePackUseCase(loggerInterface, packRepositoryInterface)
	getPackUseCaseInterface := get.NewGetPackUseCase(loggerInterface, packRepositoryInterface)
	deletePackUseCaseInterface := delete2.NewDeletePackUseCase(loggerInterface, packRepositoryInterface)
	updatePackUseCaseInterface := update.NewUpdatePackUseCase(loggerInterface, packRepositoryInterface)
	packRoute := route.NewPackRoute(dtoValidationMiddleware, createPackUseCaseInterface, getPackUseCaseInterface, deletePackUseCaseInterface, updatePackUseCaseInterface)
	loader := presentation.NewLoader(configInterface, packRoute, loggerInterface)
	return loader
}

// wire.go:

var superSet = wire.NewSet(presentation.NewLoader, shared.NewConfig, middlewares.NewDtoValidationMiddleware, create.NewCreatePackUseCase, route.NewPackRoute, shared.NewLogger, provider.NewMongoDbProvider, pack.NewPackRepository, get.NewGetPackUseCase, delete2.NewDeletePackUseCase, update.NewUpdatePackUseCase)
